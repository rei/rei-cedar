@use '@rei/cdr-tokens/dist/rei-dot-com/scss/cdr-tokens' as tokens;

@mixin cdr-label-wrapper-base-mixin() {
  @include tokens.cdr-text-utility-sans-300;

  padding: tokens.$cdr-space-half-x;
  padding-left: calc(#{tokens.$cdr-form-figure-size-medium} + #{tokens.$cdr-space-one-x});
  padding-right: tokens.$cdr-space-three-quarter-x;

  //ITEM_DOC: Text color of a label wrapper
  color: var(--cdr-label-wrapper-text-color, var(--cdr-color-text-input-label, #{tokens.$cdr-color-text-input-label}));

  //ITEM_DOC: Background color of a label wrapper
  background-color: var(--cdr-label-wrapper-background-color, var(--cdr-color-background-input-default, #{tokens.$cdr-color-background-input-default}));
  border-radius: tokens.$cdr-radius-softer;
  width: 100%;
  display: inline-block;
  margin: 0;
}

@mixin cdr-label-wrapper-primary-mixin() {
  &:hover {
    //ITEM_DOC: Background color of a primary label wrapper when hovered
    background-color: var(--cdr-label-wrapper-primary-background-color-hover, var(--cdr-color-background-label-default-hover, #{tokens.$cdr-color-background-label-default-hover}));
    cursor: pointer;
  }

  &:focus-within {
    //ITEM_DOC: Background color of a primary label wrapper when it has focus within
    background-color: var(--cdr-label-wrapper-primary-background-color-focus, var(--cdr-color-background-label-default-focus, #{tokens.$cdr-color-background-label-default-focus}));

    //ITEM_DOC: Box shadow color of a primary label wrapper when it has focus within
    box-shadow: inset 0 0 0 2px var(--cdr-label-wrapper-primary-focus-box-shadow-color, var(--cdr-color-border-label-default-focus, #{tokens.$cdr-color-border-label-default-focus}));
  }

  &:active {
    //ITEM_DOC: Background color of a primary label wrapper when active
    background-color: var(--cdr-label-wrapper-primary-background-color-active, var(--cdr-color-background-label-default-active, #{tokens.$cdr-color-background-label-default-active}));
  }
}

@mixin cdr-label-wrapper-secondary-mixin() {
  //ITEM_DOC: Background color of a secondary label wrapper
  background-color: var(--cdr-label-wrapper-secondary-background-color, var(--cdr-color-background-input-default, #{tokens.$cdr-color-background-input-default}));

  &:hover {
    //ITEM_DOC: Background color of a secondary label wrapper when hovered
    background-color: var(--cdr-label-wrapper-secondary-background-color-hover, var(--cdr-color-background-label-secondary-hover, #{tokens.$cdr-color-background-label-secondary-hover}));
    cursor: pointer;
  }

  &:focus-within {
    //ITEM_DOC: Background color of a secondary label wrapper when it has focus within
    background-color: var(--cdr-label-wrapper-secondary-background-color-focus, var(--cdr-color-background-label-secondary-focus, #{tokens.$cdr-color-background-label-secondary-focus}));
  }

  &:active {
    //ITEM_DOC: Background color of a secondary label wrapper when active
    background-color: var(--cdr-label-wrapper-secondary-background-color-active, var(--cdr-color-background-label-secondary-active, #{tokens.$cdr-color-background-label-secondary-active}));
  }
}

@mixin cdr-label-wrapper-disabled-mixin() {
  //ITEM_DOC: Text color of a disabled label wrapper
  color: var(--cdr-label-wrapper-text-color-disabled, var(--cdr-color-text-input-disabled, #{tokens.$cdr-color-text-input-disabled})) !important;
  cursor: not-allowed !important;

  &:hover, &:focus-within, &:active {
    //ITEM_DOC: Background color of a disabled label wrapper
    background-color: var(--cdr-label-wrapper-background-color-disabled, var(--cdr-color-background-input-default, #{tokens.$cdr-color-background-input-default})) !important;
  }
}

@mixin cdr-label-wrapper-small-mixin() {
  @include tokens.cdr-text-utility-sans-200;

  padding-left: calc(#{tokens.$cdr-form-figure-size-small} + #{tokens.$cdr-space-one-x});
}

@mixin cdr-label-wrapper-medium-mixin() {
  @include tokens.cdr-text-utility-sans-300;

  padding-left: calc(#{tokens.$cdr-form-figure-size-medium} + #{tokens.$cdr-space-one-x});
}

@mixin cdr-label-wrapper-large-mixin() {
  @include tokens.cdr-text-utility-sans-300;

  padding-left: calc(#{tokens.$cdr-form-figure-size-large} + #{tokens.$cdr-space-one-x});
}

@mixin cdr-label-wrapper-figure-small-mixin() {
  width: tokens.$cdr-form-figure-size-small;
  height: tokens.$cdr-form-figure-size-small;

  &::after {
    width: calc(#{tokens.$cdr-form-figure-size-small} / 4);
    height: calc(#{tokens.$cdr-form-figure-size-small} / 4);
  }
}

@mixin cdr-label-wrapper-figure-medium-mixin() {
  width: tokens.$cdr-form-figure-size-medium;
  height: tokens.$cdr-form-figure-size-medium;

  &::after {
    width: calc(#{tokens.$cdr-form-figure-size-medium} / 4);
    height: calc(#{tokens.$cdr-form-figure-size-medium} / 4);
  }
}

@mixin cdr-label-wrapper-figure-large-mixin() {
  width: tokens.$cdr-form-figure-size-large;
  height: tokens.$cdr-form-figure-size-large;

  &::after, .cdr-checkbox__checkbox-box {
    width: calc(#{tokens.$cdr-form-figure-size-large} / 4);
    height: calc(#{tokens.$cdr-form-figure-size-large} / 4);
  }
}

@mixin cdr-form-figure-base-mixin() {
  top: 11px;
  width: tokens.$cdr-form-figure-size-medium;
  height: tokens.$cdr-form-figure-size-medium;

  &::after {
    width: calc(#{tokens.$cdr-form-figure-size-medium} / 4);
    height: calc(#{tokens.$cdr-form-figure-size-medium} / 4);
  }

  position: absolute;
  left: tokens.$cdr-space-half-x;
  border-radius: tokens.$cdr-radius-softer;

  //ITEM_DOC: Background color of a form figure
  background-color: var(--cdr-form-figure-background-color, var(--cdr-color-background-input-default, #{tokens.$cdr-color-background-input-default}));

  //ITEM_DOC: Box shadow color of a form figure
  box-shadow: 0 0 0 1px var(--cdr-form-figure-box-shadow-color, var(--cdr-color-border-input-default, #{tokens.$cdr-color-border-input-default}));
  transition: box-shadow tokens.$cdr-duration-2-x tokens.$cdr-timing-function-ease;
};

@mixin label-wrapper-small-mixin($breakpoint: '') {
  &--small#{$breakpoint} {
    @include cdr-label-wrapper-small-mixin;

    & > .cdr-label-wrapper__figure {
      @include cdr-label-wrapper-figure-small-mixin;
    }
  }
}

@mixin label-wrapper-medium-mixin($breakpoint: '') {
  &--medium#{$breakpoint} {
    @include cdr-label-wrapper-medium-mixin;

    & > .cdr-label-wrapper__figure {
      @include cdr-label-wrapper-figure-medium-mixin;
    }
  }
}

@mixin label-wrapper-large-mixin($breakpoint: '') {
  &--large#{$breakpoint} {
    @include cdr-label-wrapper-large-mixin;

    & > .cdr-label-wrapper__figure {
      @include cdr-label-wrapper-figure-large-mixin;
    }

    .cdr-checkbox__checkbox-box {
      width: 2rem;
      height: 2rem;
    }

    .cdr-checkbox__svg-box svg {
      width: 2rem;
      height: 2rem;
      left: 0;
      top: -1.7rem;
    }
  }
}
